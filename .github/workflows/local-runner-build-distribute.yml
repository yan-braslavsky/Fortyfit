name: Build and Distribute

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-distribute:
    name: Build and Distribute
    runs-on: macos-latest
    steps:
      - name: Encode and Echo Secrets
        run: |
          echo "EXPO_APPLE_ID: $(echo ${EXPO_APPLE_ID} | base64)"
        env:
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Clear npm cache
        run: npm cache clean --force
      - name: Adjust npm cache permissions
        run: sudo chown -R $(whoami) ~/.npm
      - name: Install Homebrew (macOS)
        run: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install jq (macOS)
        run: brew install jq
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Install dependencies
        run: npm ci
      - name: Bump version
        id: bump
        run: |
          content=$(cat app.json)
          ios_build=$(echo $content | jq -r '.expo.ios.buildNumber')
          new_ios_build=$((ios_build + 1))
          android_code=$(echo $content | jq -r '.expo.android.versionCode')
          new_android_code=$((android_code + 1))
          content=$(echo $content | jq --arg ios "$new_ios_build" --arg android "$new_android_code" '.expo.ios.buildNumber = $ios | .expo.android.versionCode = $android')
          echo $content > app.json
          echo "new_ios_build=$new_ios_build" >> $GITHUB_OUTPUT
          echo "new_android_code=$new_android_code" >> $GITHUB_OUTPUT
      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add app.json
          git commit -m "Bump iOS build number to ${{ steps.bump.outputs.new_ios_build }} and Android version code to ${{ steps.bump.outputs.new_android_code }}"
          git push
      - name: Setup EAS Build
        env:
          EXPO_ANDROID_KEYSTORE_BASE64: ${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}
          EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
          EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
          EXPO_ANDROID_KEYSTORE_ALIAS: ${{ secrets.EXPO_ANDROID_KEYSTORE_ALIAS }}
          EXPO_APPLE_TEAM_ID: ${{ secrets.EXPO_APPLE_TEAM_ID }}
          EXPO_APPLE_DISTRIBUTION_CERT_BASE64: ${{ secrets.EXPO_APPLE_DISTRIBUTION_CERT_BASE64 }}
          EXPO_APPLE_DISTRIBUTION_CERT_PASSWORD: ${{ secrets.EXPO_APPLE_DISTRIBUTION_CERT_PASSWORD }}
          EXPO_APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.EXPO_APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p eas-builds
          echo $EXPO_ANDROID_KEYSTORE_BASE64 | base64 --decode > eas-builds/android-keystore.jks
          echo $EXPO_APPLE_DISTRIBUTION_CERT_BASE64 | base64 --decode > eas-builds/dist-cert.p12
          echo $EXPO_APPLE_PROVISIONING_PROFILE_BASE64 | base64 --decode > eas-builds/profile.mobileprovision
          echo '{
            "android": {
              "keystore": {
                "keystorePath": "eas-builds/android-keystore.jks",
                "keystorePassword": "'$EXPO_ANDROID_KEYSTORE_PASSWORD'",
                "keyAlias": "'$EXPO_ANDROID_KEYSTORE_ALIAS'",
