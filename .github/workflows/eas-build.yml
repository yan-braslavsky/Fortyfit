name: EAS Build
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Install and build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      - name: Install dependencies
        run: |
          npm install
          npm ci
      - name: Run tests
        run: npm test -- --ci --coverage --maxWorkers=2
      - name: Bump version
        run: |
          # Read the current app.json
          content=$(cat app.json)
          
          # Extract and increment iOS build number
          ios_build=$(echo $content | jq -r '.expo.ios.buildNumber')
          new_ios_build=$((ios_build + 1))
          
          # Extract and increment Android version code
          android_code=$(echo $content | jq -r '.expo.android.versionCode')
          new_android_code=$((android_code + 1))
          
          # Update app.json with new numbers
          content=$(echo $content | jq --arg ios "$new_ios_build" --arg android "$new_android_code" '.expo.ios.buildNumber = $ios | .expo.android.versionCode = $android')
          
          # Write updated content back to app.json
          echo $content > app.json
          
          # Set output variables for use in later steps
          echo "IOS_BUILD_NUMBER=$new_ios_build" >> $GITHUB_ENV
          echo "ANDROID_VERSION_CODE=$new_android_code" >> $GITHUB_ENV

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add app.json
          git commit -m "Bump iOS build number to ${{ env.IOS_BUILD_NUMBER }} and Android version code to ${{ env.ANDROID_VERSION_CODE }}"
          git push
      - name: Setup EAS Build
        env:
          EXPO_ANDROID_KEYSTORE_BASE64: ${{ secrets.EXPO_ANDROID_KEYSTORE_BASE64 }}
          EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
          EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
          EXPO_ANDROID_KEYSTORE_ALIAS: ${{ secrets.EXPO_ANDROID_KEYSTORE_ALIAS }}
          EXPO_APPLE_TEAM_ID: ${{ secrets.EXPO_APPLE_TEAM_ID }}
          EXPO_APPLE_DISTRIBUTION_CERT_BASE64: ${{ secrets.EXPO_APPLE_DISTRIBUTION_CERT_BASE64 }}
          EXPO_APPLE_DISTRIBUTION_CERT_PASSWORD: ${{ secrets.EXPO_APPLE_DISTRIBUTION_CERT_PASSWORD }}
          EXPO_APPLE_PROVISIONING_PROFILE_BASE64: ${{ secrets.EXPO_APPLE_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p eas-builds
          echo $EXPO_ANDROID_KEYSTORE_BASE64 | base64 --decode > eas-builds/android-keystore.jks
          echo $EXPO_APPLE_DISTRIBUTION_CERT_BASE64 | base64 --decode > eas-builds/dist-cert.p12
          echo $EXPO_APPLE_PROVISIONING_PROFILE_BASE64 | base64 --decode > eas-builds/profile.mobileprovision
          echo '{
            "android": {
              "keystore": {
                "keystorePath": "eas-builds/android-keystore.jks",
                "keystorePassword": "'$EXPO_ANDROID_KEYSTORE_PASSWORD'",
                "keyAlias": "'$EXPO_ANDROID_KEYSTORE_ALIAS'",
                "keyPassword": "'$EXPO_ANDROID_KEY_PASSWORD'"
              }
            },
            "ios": {
              "distributionCertificate": {
                "path": "eas-builds/dist-cert.p12",
                "password": "'$EXPO_APPLE_DISTRIBUTION_CERT_PASSWORD'"
              },
              "provisioningProfilePath": "eas-builds/profile.mobileprovision"
            }
          }' > credentials.json
      - name: Build on EAS
        run: eas build --platform all --non-interactive --wait
      - name: Install jq
        run: sudo apt-get install jq
      - name: Submit to app stores
        env:
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}
          EXPO_ASC_APP_ID: ${{ secrets.EXPO_ASC_APP_ID }}
          EXPO_APPLE_TEAM_ID: ${{ secrets.EXPO_APPLE_TEAM_ID }}
          GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          # Create eas.json with submission configuration
          echo '{
            "cli": {
              "version": ">= 3.13.3",
              "appVersionSource": "remote"
            },
            "build": {
              "production": {
                "android": {
                  "buildType": "app-bundle",
                  "credentialsSource": "local"
                },
                "ios": {
                  "credentialsSource": "local"
                }
              }
            },
            "submit": {
              "production": {
                "ios": {
                  "appleId": "'$EXPO_APPLE_ID'",
                  "ascAppId": "'$EXPO_ASC_APP_ID'",
                  "appleTeamId": "'$EXPO_APPLE_TEAM_ID'"
                },
                "android": {
                  "serviceAccountKeyPath": "./google-service-account-key.json",
                  "track": "internal"
                }
              }
            }
          }' > eas.json
          
          # Create Google Service Account Key file
          echo '$GOOGLE_SERVICE_ACCOUNT_KEY' > google-service-account-key.json
          
          # Submit for iOS
          eas submit --platform ios --latest --non-interactive
          
          # Submit for Android
          eas submit --platform android --latest --non-interactive